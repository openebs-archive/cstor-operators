/*
Copyright 2020 The OpenEBS Authors

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by lister-gen. DO NOT EDIT.

package v1

import (
	v1 "github.com/openebs/api/pkg/apis/cstor/v1"
	"k8s.io/apimachinery/pkg/api/errors"
	"k8s.io/apimachinery/pkg/labels"
	"k8s.io/client-go/tools/cache"
)

// CStorVolumeConfigLister helps list CStorVolumeConfigs.
type CStorVolumeConfigLister interface {
	// List lists all CStorVolumeConfigs in the indexer.
	List(selector labels.Selector) (ret []*v1.CStorVolumeConfig, err error)
	// CStorVolumeConfigs returns an object that can list and get CStorVolumeConfigs.
	CStorVolumeConfigs(namespace string) CStorVolumeConfigNamespaceLister
	CStorVolumeConfigListerExpansion
}

// cStorVolumeConfigLister implements the CStorVolumeConfigLister interface.
type cStorVolumeConfigLister struct {
	indexer cache.Indexer
}

// NewCStorVolumeConfigLister returns a new CStorVolumeConfigLister.
func NewCStorVolumeConfigLister(indexer cache.Indexer) CStorVolumeConfigLister {
	return &cStorVolumeConfigLister{indexer: indexer}
}

// List lists all CStorVolumeConfigs in the indexer.
func (s *cStorVolumeConfigLister) List(selector labels.Selector) (ret []*v1.CStorVolumeConfig, err error) {
	err = cache.ListAll(s.indexer, selector, func(m interface{}) {
		ret = append(ret, m.(*v1.CStorVolumeConfig))
	})
	return ret, err
}

// CStorVolumeConfigs returns an object that can list and get CStorVolumeConfigs.
func (s *cStorVolumeConfigLister) CStorVolumeConfigs(namespace string) CStorVolumeConfigNamespaceLister {
	return cStorVolumeConfigNamespaceLister{indexer: s.indexer, namespace: namespace}
}

// CStorVolumeConfigNamespaceLister helps list and get CStorVolumeConfigs.
type CStorVolumeConfigNamespaceLister interface {
	// List lists all CStorVolumeConfigs in the indexer for a given namespace.
	List(selector labels.Selector) (ret []*v1.CStorVolumeConfig, err error)
	// Get retrieves the CStorVolumeConfig from the indexer for a given namespace and name.
	Get(name string) (*v1.CStorVolumeConfig, error)
	CStorVolumeConfigNamespaceListerExpansion
}

// cStorVolumeConfigNamespaceLister implements the CStorVolumeConfigNamespaceLister
// interface.
type cStorVolumeConfigNamespaceLister struct {
	indexer   cache.Indexer
	namespace string
}

// List lists all CStorVolumeConfigs in the indexer for a given namespace.
func (s cStorVolumeConfigNamespaceLister) List(selector labels.Selector) (ret []*v1.CStorVolumeConfig, err error) {
	err = cache.ListAllByNamespace(s.indexer, s.namespace, selector, func(m interface{}) {
		ret = append(ret, m.(*v1.CStorVolumeConfig))
	})
	return ret, err
}

// Get retrieves the CStorVolumeConfig from the indexer for a given namespace and name.
func (s cStorVolumeConfigNamespaceLister) Get(name string) (*v1.CStorVolumeConfig, error) {
	obj, exists, err := s.indexer.GetByKey(s.namespace + "/" + name)
	if err != nil {
		return nil, err
	}
	if !exists {
		return nil, errors.NewNotFound(v1.Resource("cstorvolumeconfig"), name)
	}
	return obj.(*v1.CStorVolumeConfig), nil
}
